name: Test Automation CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run regression tests daily at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch:
    inputs:
      browser:
        description: "Browser to run tests on"
        required: true
        default: "chrome"
        type: choice
        options:
          - chrome
          - firefox
          - edge
      environment:
        description: "Environment to test against"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - staging
          - prod
      test_suite:
        description: "Test suite to execute"
        required: true
        default: "smoke"
        type: choice
        options:
          - smoke
          - regression
          - cross-browser
          - data-driven
          - api
          - performance
      headless:
        description: "Run in headless mode"
        required: true
        default: true
        type: boolean
      thread_count:
        description: "Number of parallel threads"
        required: true
        default: "3"
        type: string

jobs:
  smoke-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    strategy:
      matrix:
        browser: [chrome, firefox]
        environment: [dev]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest

      - name: Install Firefox
        uses: browser-actions/setup-firefox@latest

      - name: Run smoke tests
        run: |
          mvn test -Psmoke,${{ matrix.environment }},${{ matrix.browser }} \
            -Dbrowser=${{ matrix.browser }} \
            -Denvironment=${{ matrix.environment }} \
            -Dheadless=true \
            -Dthread.count=2

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.browser }}-${{ matrix.environment }}
          path: |
            target/surefire-reports/
            target/allure-results/
            screenshots/
            logs/
            reports/

  regression-tests:
    runs-on: ubuntu-latest
    if: github.event.schedule || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_suite == 'regression')
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        environment: [dev, staging]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install browsers
        run: |
          # Install Chrome
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

          # Install Firefox
          sudo apt-get install -y firefox

          # Install Edge
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
          sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
          sudo apt-get update
          sudo apt-get install -y microsoft-edge-stable

      - name: Run regression tests
        run: |
          mvn test -Pregression,${{ matrix.environment }},${{ matrix.browser }} \
            -Dbrowser=${{ matrix.browser }} \
            -Denvironment=${{ matrix.environment }} \
            -Dheadless=true \
            -Dthread.count=3

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: regression-results-${{ matrix.browser }}-${{ matrix.environment }}
          path: |
            target/surefire-reports/
            target/allure-results/
            screenshots/
            logs/
            reports/

  cross-browser-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_suite == 'cross-browser'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install browsers
        run: |
          # Install Chrome
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

          # Install Firefox
          sudo apt-get install -y firefox

          # Install Edge
          curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
          sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
          sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
          sudo apt-get update
          sudo apt-get install -y microsoft-edge-stable

      - name: Run cross-browser tests
        run: |
          mvn test -Pcross-browser,${{ github.event.inputs.environment }} \
            -Denvironment=${{ github.event.inputs.environment }} \
            -Dheadless=${{ github.event.inputs.headless }} \
            -Dthread.count=${{ github.event.inputs.thread_count }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cross-browser-results
          path: |
            target/surefire-reports/
            target/allure-results/
            screenshots/
            logs/
            reports/

  manual-execution:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Install browsers
        run: |
          # Install Chrome
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

          # Install Firefox
          sudo apt-get install -y firefox

          # Install Edge (if not API tests)
          if [ "${{ github.event.inputs.test_suite }}" != "api" ]; then
            curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
            sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
            sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
            sudo apt-get update
            sudo apt-get install -y microsoft-edge-stable
          fi

      - name: Run tests
        run: |
          mvn test -P${{ github.event.inputs.test_suite }},${{ github.event.inputs.environment }},${{ github.event.inputs.browser }} \
            -Dbrowser=${{ github.event.inputs.browser }} \
            -Denvironment=${{ github.event.inputs.environment }} \
            -Dheadless=${{ github.event.inputs.headless }} \
            -Dthread.count=${{ github.event.inputs.thread_count }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: manual-execution-results
          path: |
            target/surefire-reports/
            target/allure-results/
            screenshots/
            logs/
            reports/

  generate-reports:
    runs-on: ubuntu-latest
    needs: [smoke-tests]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Merge test results
        run: |
          mkdir -p target/allure-results
          find . -name "allure-results" -type d -exec cp -r {}/* target/allure-results/ \;

      - name: Generate Allure report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: target/allure-results
          allure_report: allure-report
          gh_pages: gh-pages
          allure_history: allure-history

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: allure-history
          destination_dir: allure-report
